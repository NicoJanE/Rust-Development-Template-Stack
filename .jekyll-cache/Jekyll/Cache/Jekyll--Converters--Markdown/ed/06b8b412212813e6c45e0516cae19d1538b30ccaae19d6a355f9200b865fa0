I"<p><em>This file is part of: PHP Development Template Stack</em>
<em>Copyright (c) 2024 Nico Jan Eelhart</em></p>

<p><em>This source code is licensed under the MIT License found in the  ‘LICENSE.md’ file in the root directory of this source tree.</em>
<br /><br /></p>

<h1 id="1-create-and-start-the-container">1 Create and start the container</h1>

<p><br />
To start the rust basic container in Docker Desktop execute this command from the <strong>this</strong>  directory:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose -f compose_rust_cont.yml up -d --build --force-recreate
</code></pre></div></div>
<p><br /></p>

<h3 id="11-optional-add-a-web-rocket-project-using-a-add-on-docker-compose-file">1.1 Optional add a Web Rocket project (using a add-on Docker compose file)</h3>
<p>Optional, you can add one or more <strong><em>‘Rocket’</em></strong>  web framework projects, this creates a new project (directory) and installs the needed libraries</p>
<ol>
  <li>For this, first you must set an environment variable which indicates the project name (which will be a directory). In case of a Windows host, set an environment variable with:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$env:PRJ_NAME_ARG="name_of_project_directory"
</code></pre></div>    </div>
    <blockquote>
      <p><em style="color: orange;font-size:13px; ">Note:</em> <br />
<small>When you don’t set this variable a <strong><em>default</em></strong> will be used, taken from the file: <strong><em>.env</em></strong> (‘default_project_name’)</small></p>
    </blockquote>
  </li>
  <li>Then executing the add-on compose file
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose -f compose_rocket_prj_addon.yml up -d --build  --force-recreate                  
</code></pre></div>    </div>
    <blockquote>
      <p><em style="color: orange;font-size:13px; ">Note:</em> <br />
<small>our project is created in \app[$env:PRJ_NAME_ARG] if environment is not set the default name is used</small></p>
    </blockquote>
  </li>
  <li>Then in the container, in the newly created project directory(project_name_dir), execute first a command to <strong>build</strong> the project and then a command to <strong>run</strong> the project
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cargo build --release			# Builds the project
cargo run --release			# Runs the rocket server
</code></pre></div>    </div>
  </li>
  <li>Now you can browse via the host in a browser to: <a href="http://localhost:8000/">http://localhost:8000/</a></li>
</ol>

<p><br /></p>

<hr />

<h3 id="2-be-aware-of-the-following">2. Be-aware of the following:</h3>
<ul>
  <li><strong><em>Project files are created in the container (/app)</em></strong> not on the host, there is a bind mount on the container: <strong>/host/workdir</strong> in the host you find it in: <strong>/workdir</strong> You can use this to copy the projects here, so they are available on the host.<br /><br /></li>
  <li>The new project name directory(see step 1) will contain a <strong><em>rocket.toml</em></strong> file that holds the web settings, one of these setting is the:
<strong><em>address = “0.0.0.0”</em></strong> this must be set to 0.0.0.0 to make sure the host can access the web site. 
Another important settings is for example: port, if you change this make sure to update also the ‘compose_rust_cont.yml’ file. Other settings are available as comments in the file(not all) <br /><br /></li>
  <li>The config file and the template main are copied from the host in the directory:
 <strong><em>RustService\Rocket_customized</em></strong> <br /><br /></li>
  <li>When running more than one web application on the same server make sure to use another web port in the Rocket.toml file and in the docker files(compose)<br /><br /></li>
  <li>use: <code class="language-plaintext highlighter-rouge">$env:PRJ_NAME_ARG</code> in Power-shell host command box to test the new directory that will be created</li>
</ul>

:ET